{"version":3,"file":"component---src-pages-publications-index-js-9d77b4d070979eacc097.js","mappings":"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","sources":["webpack://lastig-gastby/./src/components/CreateNodes.js","webpack://lastig-gastby/./src/components/seo.js","webpack://lastig-gastby/./src/components/styles/Publications.styled.js","webpack://lastig-gastby/./src/pages/publications/index.js","webpack://lastig-gastby/./src/util.js"],"sourcesContent":["import React, { useState } from 'react'\nimport { FaClipboardCheck, FaFilePdf } from 'react-icons/fa6'\nimport { Icon } from '@iconify-icon/react';\nimport { PublicationList, Publication, ImageLink } from './styles/Publications.styled'\n\n// Component adapted from: https://blog.logrocket.com/implementing-copy-clipboard-react-clipboard-api/\nfunction ClipboardCopy({ copyText }) {\n    const [isCopied, setIsCopied] = useState(false);\n    async function copyTextToClipboard(text) { return await navigator.clipboard.writeText(text); }\n    // onClick handler function for the copy button\n    const handleCopyClick = () => {\n        // Asynchronously call copyTextToClipboard\n        copyTextToClipboard(copyText)\n            .then(() => {\n                // If successful, update the isCopied state value\n                setIsCopied(true);\n                setTimeout(() => { setIsCopied(false); }, 1500);\n            })\n            .catch((err) => { console.log(err); });\n    }\n    return (\n        <ImageLink> <button onClick={handleCopyClick} aria-label=\"Copy the bibtex to the clipboard\"> {isCopied ? <FaClipboardCheck /> : <Icon icon=\"file-icons:bibtex\" width=\"2em\" height=\"2em\" />} </button> </ImageLink>\n    );\n}\n\nfunction withLink(ref, content) {\n    const url = (ref.startsWith(\"http\")) ? ref : `https://www.doi.org/${ref}`;\n    return <ImageLink><a href={url}>{content}</a></ImageLink>\n}\n\nfunction ResearchDataIcon(researchData) {\n    if (researchData.includes(\"figshare\") || researchData.startsWith(\"10.6084/\")) return withLink(researchData, <Icon icon=\"simple-icons:figshare\" width=\"2em\" height=\"2em\" />)\n    if (researchData.includes(\"zenodo\") || researchData.startsWith(\"10.5281/\")) return withLink(researchData, <Icon icon=\"simple-icons:zenodo\" width=\"2em\" height=\"2em\" />)\n    if (researchData.startsWith(\"10.17632/\")) return withLink(researchData, <Icon icon=\"simple-icons:mendeley\" width=\"2em\" height=\"2em\" />)\n    if (researchData.startsWith(\"10.57967/\")) return withLink(researchData, <Icon icon=\"simple-icons:huggingface\" width=\"2em\" height=\"2em\" />)\n    if (researchData.startsWith(\"10.2760/\")) return withLink(researchData, <Icon icon=\"twemoji:flag-european-union\" width=\"2em\" height=\"2em\" />)\n    if (researchData.includes(\"arXiv\") || researchData.startsWith(\"10.48550/\")) return withLink(researchData, <Icon icon=\"simple-icons:arxiv\" width=\"2em\" height=\"2em\" />)\n    if (researchData.startsWith(\"10.1145/\")) return withLink(researchData, <Icon icon=\"academicons:acmdl\" width=\"2em\" height=\"2em\" />)\n    return null;\n}\nfunction Repo(repo) {\n    if (repo.includes(\"github.com\")) return withLink(repo, <Icon icon=\"fe:github-alt\" width=\"2em\" height=\"2em\" />)\n    return null;\n}\n\nexport const CreateNodes = ({nodes, type}) => {\n    function pubKey(node) { console.log(`${node.id}-${type}`); return `${node.id}-${type}` };\n    return (\n        <PublicationList>\n            {nodes.map((node) => (\n                <Publication key={pubKey(node)}>\n                    <td>\n                        <span key={`${node.id}-authors`}>\n                            {node.authIdHalFullName.map((auth) => <a href={auth[\"idHal\"] ? `https://cv.archives-ouvertes.fr/${auth[\"idHal\"]}` : null}>{auth[\"fullName\"]}</a>)}\n                        </span>\n                        <a href={`https://hal.science/${node.halId}`} key={`${node.id}-title`}>{node.title}</a>\n                        <span key={`${node.id}-citation`} dangerouslySetInnerHTML={{ __html: node.citationRef }} ></span>\n                    </td>\n                    <td>{node.researchData && node.researchData.map((rData) => ResearchDataIcon(rData))}</td>\n                    <td>{node.softCodeRepository && node.softCodeRepository.map((repo) => Repo(repo))}</td>\n                    <td><ImageLink>{node.doiId && <a href={`https://www.doi.org/${node.doiId}`} aria-label='Document page using DOI'><Icon icon=\"academicons:doi\" width=\"2em\" height=\"2em\" /></a>}</ImageLink></td>\n                    <td><ImageLink>{node.fileMain && <a href={node.fileMain} aria-label='Main document in HAL'><FaFilePdf /></a>}</ImageLink></td>\n                    <td>{ClipboardCopy({ copyText: node.label_bibtex })}</td>\n                </Publication>\n            ))}\n        </PublicationList>\n    );\n}\n","import * as React from 'react'\nimport { graphql, useStaticQuery } from 'gatsby'\n\nconst Seo = ({ title }) => {\n  const data = useStaticQuery(graphql`\n    query {\n      site {\n        siteMetadata {\n          title\n        }\n      }\n    }\n  `)\n\n  return (\n    <title>{title} | {data.site.siteMetadata.title}</title>\n  )\n}\n\nexport default Seo","import styled from \"styled-components\";\n\nexport const PublicationListOfLists = styled.div`\n    margin: 2rem;\n    margin: 2rem;\n`\n\nexport const PublicationList = styled.table`\n  width: 100%;\n`\n\nexport const Publication = styled.tr`\n    margin: 1rem;\n    width: 100%;\n    span {\n        a {\n            color: #bfbfbf;\n            text-decoration: none;\n            &:not(:last-child)::after {\n                content: \", \";\n            }\n            &:last-child::after {\n                content: \". \";\n            }\n        }\n    }\n    a {\n        color: #29af7f;\n        text-decoration: none;\n        &:after {\n            content: \". \";\n        }\n    }\n`\nexport const ImageLink = styled.div`\n    width: 32px;\n    height: 32px;\n    display: block;\n    float:right;\n    svg {\n        width: 100%;\n        height: 100%;\n    }\n    button {\n        width: 100%;\n        height: 100%;\n        background-color: transparent;\n        border: none;\n    }\n    iconify-icon {\n        svg {\n            width: 2em;\n            height: 2em;\n        }\n    }\n`","import React from 'react'\nimport { graphql } from 'gatsby'\nimport Layout from '../../components/Layout'\nimport Seo from '../../components/seo'\nimport { useIntl } from 'react-intl'\nimport { PublicationListOfLists } from '../../components/styles/Publications.styled'\nimport { getPubType } from '../../util'\nimport { CreateNodes } from '../../components/CreateNodes'\n\nconst PublicationsPage = ({ data }) => {\n    const intl = useIntl()\n    function trans(text) { return intl.formatMessage({ id: text }) }\n    const nodes = data.allHal.nodes;\n    const classifiedNodes = nodes.map((node) => ({ pubType: getPubType(node), ...node }));\n    function Pub({ pubType }) {\n        const filteredNodes = classifiedNodes.filter((node) => node.pubType === pubType);\n        // const nodes = createNodes(classifiedNodes, pubType)\n        if (filteredNodes.length > 0) {\n            return (\n                <div key={`pub${pubType}`}>\n                    <h2> {trans(pubType)} </h2>\n                    {/* <PublicationList>{nodes}</PublicationList> */}\n                    <CreateNodes nodes = {filteredNodes} type={pubType}/>\n                </div>\n            );\n        }\n        return null;\n    }\n    return (\n        <Layout pageTitle=\"LASTIG Publications\">\n            <h1>{trans('LASTIG Publications')}</h1>\n            <PublicationListOfLists>\n                <Pub pubType=\"ACL\" key=\"ACL\"></Pub>\n                <Pub pubType=\"ACLN\" key=\"ACLN\"></Pub>\n                <Pub pubType=\"ASCL\" key=\"ASCL\"></Pub>\n                <Pub pubType=\"PV\" key=\"PV\"></Pub>\n                <Pub pubType=\"INV\" key=\"INV\"></Pub>\n                <Pub pubType=\"COM\" key=\"COM\"></Pub>\n                <Pub pubType=\"ACTI\" key=\"ACTI\"></Pub>\n                <Pub pubType=\"ACTN\" key=\"ACTN\"></Pub>\n                <Pub pubType=\"OS\" key=\"OS\"></Pub>\n                <Pub pubType=\"DO\" key=\"DO\"></Pub>\n                <Pub pubType=\"AP\" key=\"AP\"></Pub>\n                <Pub pubType=\"TH\" key=\"TH\"></Pub>\n                <Pub pubType=\"AFF\" key=\"AFF\"></Pub>\n                <Pub pubType=\"OTHER\" key=\"OTHER\"></Pub>\n            </PublicationListOfLists>\n        </Layout>\n    )\n}\n\nexport const query = graphql`\n    query {\n        allHal {\n            nodes {\n                halId\n                id\n                citationRef\n                docType\n                fileMain\n                files\n                invitedCommunication\n                label_bibtex\n                popularLevel\n                proceedings\n                producedDate\n                title\n                authIdHalFullName {\n                    fullName\n                    idHal\n                }\n                peerReviewing\n                researchData\n                audience\n                doiId\n                softCodeRepository\n                arxivId\n                anrProjectTitle\n                europeanProjectTitle\n                publicationDate\n            }\n        }\n    }\n`\n\nexport const Head = () => <Seo title=\"LASTIG Publications\" />\n\nexport default PublicationsPage","export function getPubType(node) {\n    if (node.popularLevel === \"1\") return \"PV\";\n    if (node.popularLevel === \"0\" && node.docType === \"ART\" && node.peerReviewing === \"0\") return \"ASCL\";\n    if (node.popularLevel === \"0\" && node.docType === \"ART\" && node.peerReviewing === \"1\" && node.audience === \"2\") return \"ACL\";\n    if (node.popularLevel === \"0\" && node.docType === \"ART\" && node.peerReviewing === \"1\") return \"ACLN\";\n    if (node.popularLevel === \"0\" && node.docType === \"COMM\" && node.invitedCommunication === \"1\") return \"INV\";\n    if (node.popularLevel === \"0\" && node.docType === \"COMM\" && node.invitedCommunication === \"0\" && node.proceedings === \"0\") return \"COM\";\n    if (node.popularLevel === \"0\" && node.docType === \"COMM\" && node.invitedCommunication === \"0\" && node.proceedings === \"1\" && node.audience === \"2\") return \"ACTI\";\n    if (node.popularLevel === \"0\" && node.docType === \"COMM\" && node.invitedCommunication === \"0\" && node.proceedings === \"1\") return \"ACTN\";\n    if (node.docType === \"COUV\") return \"OS\";\n    if (node.docType === \"DOUV\") return \"DO\";\n    if (node.docType === \"REPORT\" || node.docType === \"UNDEFINED\") return \"AP\";\n    if (node.docType === \"THESE\" || node.docType === \"HDR\") return \"TH\";\n    if (node.docType === \"POSTER\") return \"AFF\";\n    return \"OTHER\";\n}\n"],"names":["ClipboardCopy","_ref","copyText","isCopied","setIsCopied","useState","React","ImageLink","onClick","handleCopyClick","async","text","navigator","clipboard","writeText","copyTextToClipboard","then","setTimeout","catch","err","console","log","FaClipboardCheck","Icon","icon","width","height","withLink","ref","content","url","startsWith","href","CreateNodes","_ref2","nodes","type","pubKey","node","id","PublicationList","map","Publication","key","authIdHalFullName","auth","halId","title","dangerouslySetInnerHTML","__html","citationRef","researchData","rData","ResearchDataIcon","includes","softCodeRepository","repo","Repo","doiId","fileMain","FaFilePdf","label_bibtex","data","useStaticQuery","site","siteMetadata","PublicationListOfLists","styled","div","withConfig","displayName","componentId","table","tr","Head","Seo","intl","useIntl","trans","formatMessage","classifiedNodes","allHal","pubType","getPubType","Pub","filteredNodes","filter","length","Layout","pageTitle","popularLevel","docType","peerReviewing","audience","invitedCommunication","proceedings"],"sourceRoot":""}